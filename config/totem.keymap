//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3

&sk {
    release-after-ms = <900>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};

&sl {
    ignore-modifiers;          // allow chording sticky mods & layers
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <5 6 8 9 16 17 18 19 27 28 29 30 31 36 37 15 26 35 7>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <180>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34>;
        };

        smart_shft: smart_shft {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SHFT";
            bindings = <&sk LSHFT>, <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            label = "BASE";
            bindings = <
                  &kp Q        &kp W        &kp D           &kp F         &kp K            &kp J      &kp U         &kp R         &kp L        &kp SEMI
                  &hml LGUI A  &hml LALT S  &hml LCTRL E    &hml LSHFT T  &kp G            &kp Y      &hmr RSHFT N  &hmr RCTRL I  &hmr RALT O  &hmr RGUI H
&mt LCTRL ESCAPE  &kp Z        &kp X        &kp C           &kp V         &kp B            &kp P      &kp M         &kp COMMA     &kp DOT      &kp FSLH     &kp EQUAL
                                            &mt LGUI GRAVE  &lt 1 SPACE   &kp BACKSPACE    &lt 3 TAB  &lt 2 ENTER   &smart_shft
            >;
        };

        sym_layer {
            label = "SYM";
            bindings = <
        &trans    &kp AT    &kp HASH  &kp EQUAL       &trans        &trans     &kp PERCENT  &kp LBKT  &kp RBKT  &trans
        &kp EXCL  &kp LBRC  &kp RBRC  &kp UNDERSCORE  &kp DOLLAR    &kp CARET  &kp MINUS    &kp AMPS  &kp STAR  &kp PLUS
&trans  &trans    &kp BSLH  &kp DQT   &kp SQT         &trans        &trans     &kp PIPE     &kp LT    &kp GT    &trans    &trans
                            &trans    &trans          &trans        &kp UNDER  &kp LPAR     &kp RPAR
            >;
        };

        num_layer {
            label = "NUM";
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &kp N1  &kp N2  &kp N3  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &kp N4  &kp N5  &kp N6  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N0  &kp N7  &kp N8  &kp N9  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
        &trans  &trans  &trans        &trans        &trans        &trans  &trans    &trans    &trans  &trans
        &trans  &trans  &trans        &trans        &trans        &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT
&trans  &trans  &trans  &trans        &trans        &trans        &trans  &trans    &trans    &trans  &trans     &trans
                        &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE    &trans  &trans    &trans
            >;
        };

        sys_layer {
            label = "SYS";
            bindings = <
        &sys_reset   &bt BT_CLR  &out OUT_TOG  &trans  &trans    &trans  &kp F1  &kp F2  &kp F3  &kp F12
        &bootloader  &bt BT_NXT  &trans        &trans  &tog 5    &trans  &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans       &bt BT_PRV  &trans        &trans  &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F10  &trans
                                 &trans        &trans  &trans    &trans  &trans  &trans
            >;
        };

        game_layer {
            bindings = <
         &kp TAB    &kp Q  &kp W      &kp E      &kp R    &kp T     &kp Y   &kp U   &kp I   &kp O
         &kp LSHFT  &kp A  &kp S      &kp D      &kp F    &kp G     &kp H   &kp J   &kp K   &kp L
&kp ESC  &kp LCTRL  &kp Z  &kp X      &kp C      &kp V    &kp B     &kp N   &kp M   &trans  &trans  &kp P
                           &kp SPACE  &kp ENTER  &mo 6    &kp LALT  &trans  &trans
            >;

            label = "GAME";
        };

        game2_layer {
            bindings = <
        &trans  &kp N1  &kp N2  &kp N3  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &kp N4  &kp N5  &kp N6  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "GAME+";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        SYS {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};
